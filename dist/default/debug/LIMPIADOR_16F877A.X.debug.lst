

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 12 20:08:23 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175                           
   176                           	psect	strings
   177     0100                     __pstrings:
   178     0100                     stringtab:
   179     0100                     __stringtab:
   180     0100                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183     0100                     stringdir:
   184     0100  3001               	movlw	high stringdir
   185     0101  008A               	movwf	10
   186     0102  0804               	movf	4,w
   187     0103  0A84               	incf	4,f
   188     0104  0782               	addwf	2,f
   189     0105                     __stringbase:
   190     0105  3400               	retlw	0
   191     0106                     __end_of__stringtab:
   192     0106                     _DATOS:
   193     0106  34C0               	retlw	192
   194     0107  34F9               	retlw	249
   195     0108  34A4               	retlw	164
   196     0109  34B0               	retlw	176
   197     010A  3499               	retlw	153
   198     010B  3492               	retlw	146
   199     010C  3482               	retlw	130
   200     010D  34F8               	retlw	248
   201     010E  3480               	retlw	128
   202     010F  3490               	retlw	144
   203     0110  3488               	retlw	136
   204     0111  3483               	retlw	131
   205     0112  34C6               	retlw	198
   206     0113  34A1               	retlw	161
   207     0114  3486               	retlw	134
   208     0115  348E               	retlw	142
   209     0116  34C2               	retlw	194
   210     0117  3489               	retlw	137
   211     0118  34CF               	retlw	207
   212     0119  34E1               	retlw	225
   213     011A  3489               	retlw	137
   214     011B  34C7               	retlw	199
   215     011C  34C8               	retlw	200
   216     011D  34AB               	retlw	171
   217     011E  34C0               	retlw	192
   218     011F  348C               	retlw	140
   219     0120  3498               	retlw	152
   220     0121  34AF               	retlw	175
   221     0122  3492               	retlw	146
   222     0123  3487               	retlw	135
   223     0124  34C1               	retlw	193
   224     0125  34C1               	retlw	193
   225     0126  34D5               	retlw	213
   226     0127  3489               	retlw	137
   227     0128  3491               	retlw	145
   228     0129  34A4               	retlw	164
   229     012A  34BF               	retlw	191
   230     012B  347F               	retlw	127
   231     012C  349C               	retlw	156
   232     012D  34FF               	retlw	255
   233     012E                     __end_of_DATOS:
   234     0001                     _TMR0	set	1
   235     000B                     _INTCONbits	set	11
   236     0008                     _PORTD	set	8
   237     0005                     _PORTA	set	5
   238     0081                     _OPTION_REGbits	set	129
   239     0088                     _TRISD	set	136
   240     0085                     _TRISA	set	133
   241                           
   242                           	psect	cinit
   243     000F                     start_initialization:	
   244                           ; #config settings
   245                           
   246     000F                     __initialization:
   247                           
   248                           ; Clear objects allocated to COMMON
   249     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   250     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   251     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   252     0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   253                           
   254                           ; Clear objects allocated to BANK0
   255     0013  1283               	bcf	3,5	;RP0=0, select bank0
   256     0014  1303               	bcf	3,6	;RP1=0, select bank0
   257     0015  01AC               	clrf	__pbssBANK0& (0+127)
   258     0016  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   259     0017  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   260     0018  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   261     0019  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   262     001A  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   263     001B  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   264     001C  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   265     001D                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268     001D                     __end_of__initialization:
   269     001D  0183               	clrf	3
   270     001E  120A  118A  2961   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMMON
   273     0078                     __pbssCOMMON:
   274     0078                     _milisegundos:
   275     0078                     	ds	4
   276                           
   277                           	psect	bssBANK0
   278     002C                     __pbssBANK0:
   279     002C                     visualizar_display@last_mux:
   280     002C                     	ds	4
   281     0030                     _display_buffer:
   282     0030                     	ds	3
   283     0033                     _display_state:
   284     0033                     	ds	1
   285                           
   286                           	psect	cstackCOMMON
   287     0070                     __pcstackCOMMON:
   288     0070                     ?_configurar_hardware:
   289     0070                     ?_configurar_tmr0:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ?_INT_TMR0:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ??_INT_TMR0:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_visualizar_display:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 1 bytes @ 0x0
   306     0070                     	ds	2
   307     0072                     ??_configurar_hardware:
   308     0072                     ??_configurar_tmr0:	
   309                           ; 1 bytes @ 0x2
   310                           
   311     0072                     ?___awmod:	
   312                           ; 1 bytes @ 0x2
   313                           
   314     0072                     ?_millis:	
   315                           ; 2 bytes @ 0x2
   316                           
   317     0072                     ___awmod@divisor:	
   318                           ; 4 bytes @ 0x2
   319                           
   320                           
   321                           ; 2 bytes @ 0x2
   322     0072                     	ds	2
   323     0074                     ___awmod@dividend:
   324                           
   325                           ; 2 bytes @ 0x4
   326     0074                     	ds	2
   327     0076                     ??_millis:
   328     0076                     ??___awmod:	
   329                           ; 1 bytes @ 0x6
   330                           
   331     0076                     ___awmod@counter:	
   332                           ; 1 bytes @ 0x6
   333                           
   334                           
   335                           ; 1 bytes @ 0x6
   336     0076                     	ds	1
   337     0077                     ___awmod@sign:
   338                           
   339                           ; 1 bytes @ 0x7
   340     0077                     	ds	1
   341     0078                     ??_main:
   342                           
   343                           	psect	cstackBANK0
   344     0020                     __pcstackBANK0:	
   345                           ; 1 bytes @ 0x8
   346                           
   347     0020                     millis@m:
   348                           
   349                           ; 4 bytes @ 0x0
   350     0020                     	ds	4
   351     0024                     ??_visualizar_display:
   352                           
   353                           ; 1 bytes @ 0x4
   354     0024                     	ds	4
   355     0028                     visualizar_display@now:
   356                           
   357                           ; 4 bytes @ 0x8
   358     0028                     	ds	4
   359                           
   360                           	psect	maintext
   361     0161                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 142 in file "Codigo_fuente.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels required when called: 3
   387 ;; This function calls:
   388 ;;		_configurar_hardware
   389 ;;		_configurar_tmr0
   390 ;;		_visualizar_display
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     0161                     _main:	
   397                           ;psect for function _main
   398                           
   399     0161                     l769:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   402                           
   403                           
   404                           ;Codigo_fuente.c: 143:     configurar_hardware();
   405     0161  120A  118A  2183  120A  118A  	fcall	_configurar_hardware
   406                           
   407                           ;Codigo_fuente.c: 144:     configurar_tmr0();
   408     0166  120A  118A  2174  120A  118A  	fcall	_configurar_tmr0
   409     016B                     l771:
   410                           
   411                           ;Codigo_fuente.c: 147:         visualizar_display();
   412     016B  120A  118A  2021  120A  118A  	fcall	_visualizar_display
   413     0170  296B               	goto	l771
   414     0171  120A  118A  280C   	ljmp	start
   415     0174                     __end_of_main:
   416                           
   417                           	psect	text1
   418     0021                     __ptext1:	
   419 ;; *************** function _visualizar_display *****************
   420 ;; Defined at:
   421 ;;		line 126 in file "Codigo_fuente.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  now             4    8[BANK0 ] unsigned long 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       4       0       0       0
   437 ;;      Temps:          0       4       0       0       0
   438 ;;      Totals:         0       8       0       0       0
   439 ;;Total ram usage:        8 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 2
   442 ;; This function calls:
   443 ;;		___awmod
   444 ;;		_millis
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450     0021                     _visualizar_display:	
   451                           ;psect for function _visualizar_display
   452                           
   453     0021                     l755:	
   454                           ;incstack = 0
   455                           ; Regs used in _visualizar_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   456                           
   457                           
   458                           ;Codigo_fuente.c: 127:     static uint32_t last_mux = 0;;Codigo_fuente.c: 128:     uint3
      +                          2_t now = millis();
   459     0021  120A  118A  214C  120A  118A  	fcall	_millis
   460     0026  0875               	movf	?_millis+3,w
   461     0027  1283               	bcf	3,5	;RP0=0, select bank0
   462     0028  1303               	bcf	3,6	;RP1=0, select bank0
   463     0029  00AB               	movwf	visualizar_display@now+3
   464     002A  0874               	movf	?_millis+2,w
   465     002B  00AA               	movwf	visualizar_display@now+2
   466     002C  0873               	movf	?_millis+1,w
   467     002D  00A9               	movwf	visualizar_display@now+1
   468     002E  0872               	movf	?_millis,w
   469     002F  00A8               	movwf	visualizar_display@now
   470     0030                     l757:
   471                           
   472                           ;Codigo_fuente.c: 130:     if((now - last_mux) >= 500){
   473     0030  0828               	movf	visualizar_display@now,w
   474     0031  00A4               	movwf	??_visualizar_display
   475     0032  0829               	movf	visualizar_display@now+1,w
   476     0033  00A5               	movwf	??_visualizar_display+1
   477     0034  082A               	movf	visualizar_display@now+2,w
   478     0035  00A6               	movwf	??_visualizar_display+2
   479     0036  082B               	movf	visualizar_display@now+3,w
   480     0037  00A7               	movwf	??_visualizar_display+3
   481     0038  082C               	movf	visualizar_display@last_mux,w
   482     0039  02A4               	subwf	??_visualizar_display,f
   483     003A  082D               	movf	visualizar_display@last_mux+1,w
   484     003B  1C03               	skipc
   485     003C  0F2D               	incfsz	visualizar_display@last_mux+1,w
   486     003D  283F               	goto	u261
   487     003E  2840               	goto	u262
   488     003F                     u261:
   489     003F  02A5               	subwf	??_visualizar_display+1,f
   490     0040                     u262:
   491     0040  082E               	movf	visualizar_display@last_mux+2,w
   492     0041  1C03               	skipc
   493     0042  0F2E               	incfsz	visualizar_display@last_mux+2,w
   494     0043  2845               	goto	u263
   495     0044  2846               	goto	u264
   496     0045                     u263:
   497     0045  02A6               	subwf	??_visualizar_display+2,f
   498     0046                     u264:
   499     0046  082F               	movf	visualizar_display@last_mux+3,w
   500     0047  1C03               	skipc
   501     0048  0F2F               	incfsz	visualizar_display@last_mux+3,w
   502     0049  284B               	goto	u265
   503     004A  284C               	goto	u266
   504     004B                     u265:
   505     004B  02A7               	subwf	??_visualizar_display+3,f
   506     004C                     u266:
   507     004C  0827               	movf	??_visualizar_display+3,w
   508     004D  1D03               	btfss	3,2
   509     004E  285E               	goto	u270
   510     004F  0826               	movf	??_visualizar_display+2,w
   511     0050  1D03               	btfss	3,2
   512     0051  285E               	goto	u270
   513     0052  3001               	movlw	1
   514     0053  0225               	subwf	??_visualizar_display+1,w
   515     0054  1D03               	skipz
   516     0055  285A               	goto	u273
   517     0056  30F4               	movlw	244
   518     0057  0224               	subwf	??_visualizar_display,w
   519     0058  1D03               	skipz
   520     0059  285A               	goto	u273
   521     005A                     u273:
   522     005A  1C03               	btfss	3,0
   523     005B  285D               	goto	u271
   524     005C  285E               	goto	u270
   525     005D                     u271:
   526     005D  289A               	goto	l43
   527     005E                     u270:
   528     005E                     l759:
   529                           
   530                           ;Codigo_fuente.c: 131:         last_mux = now;
   531     005E  1283               	bcf	3,5	;RP0=0, select bank0
   532     005F  1303               	bcf	3,6	;RP1=0, select bank0
   533     0060  082B               	movf	visualizar_display@now+3,w
   534     0061  00AF               	movwf	visualizar_display@last_mux+3
   535     0062  082A               	movf	visualizar_display@now+2,w
   536     0063  00AE               	movwf	visualizar_display@last_mux+2
   537     0064  0829               	movf	visualizar_display@now+1,w
   538     0065  00AD               	movwf	visualizar_display@last_mux+1
   539     0066  0828               	movf	visualizar_display@now,w
   540     0067  00AC               	movwf	visualizar_display@last_mux
   541     0068                     l761:
   542                           
   543                           ;Codigo_fuente.c: 133:         PORTA &= ~0xF8;
   544     0068  3007               	movlw	7
   545     0069  00FF               	movwf	btemp+1
   546     006A  087F               	movf	btemp+1,w
   547     006B  0585               	andwf	5,f	;volatile
   548     006C                     l763:
   549                           
   550                           ;Codigo_fuente.c: 135:         PORTD = DATOS[display_buffer[display_state]];
   551     006C  0833               	movf	_display_state,w
   552     006D  3E30               	addlw	(low (_display_buffer| 0))& (0+255)
   553     006E  0084               	movwf	4
   554     006F  1383               	bcf	3,7	;select IRP bank0
   555     0070  0800               	movf	0,w
   556     0071  3E01               	addlw	low ((_DATOS-__stringbase)| (0+32768))
   557     0072  0084               	movwf	4
   558     0073  120A  118A  2100  120A  118A  	fcall	stringdir
   559     0078  0088               	movwf	8	;volatile
   560     0079                     l765:
   561                           
   562                           ;Codigo_fuente.c: 137:         PORTA |= 1 << display_state;
   563     0079  3001               	movlw	1
   564     007A  00A4               	movwf	??_visualizar_display
   565     007B  0A33               	incf	_display_state,w
   566     007C  287F               	goto	u284
   567     007D                     u285:
   568     007D  1003               	clrc
   569     007E  0DA4               	rlf	??_visualizar_display,f
   570     007F                     u284:
   571     007F  3EFF               	addlw	-1
   572     0080  1D03               	skipz
   573     0081  287D               	goto	u285
   574     0082  0824               	movf	??_visualizar_display,w
   575     0083  00FF               	movwf	btemp+1
   576     0084  087F               	movf	btemp+1,w
   577     0085  0485               	iorwf	5,f	;volatile
   578     0086                     l767:
   579                           
   580                           ;Codigo_fuente.c: 139:         display_state = (display_state + 1) % 3;
   581     0086  3003               	movlw	3
   582     0087  00F2               	movwf	___awmod@divisor
   583     0088  3000               	movlw	0
   584     0089  00F3               	movwf	___awmod@divisor+1
   585     008A  0833               	movf	_display_state,w
   586     008B  3E01               	addlw	1
   587     008C  00F4               	movwf	___awmod@dividend
   588     008D  3000               	movlw	0
   589     008E  1803               	skipnc
   590     008F  3001               	movlw	1
   591     0090  00F5               	movwf	___awmod@dividend+1
   592     0091  120A  118A  209B  120A  118A  	fcall	___awmod
   593     0096  0872               	movf	?___awmod,w
   594     0097  1283               	bcf	3,5	;RP0=0, select bank0
   595     0098  1303               	bcf	3,6	;RP1=0, select bank0
   596     0099  00B3               	movwf	_display_state
   597     009A                     l43:
   598     009A  0008               	return
   599     009B                     __end_of_visualizar_display:
   600                           
   601                           	psect	text2
   602     014C                     __ptext2:	
   603 ;; *************** function _millis *****************
   604 ;; Defined at:
   605 ;;		line 119 in file "Codigo_fuente.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  m               4    0[BANK0 ] unsigned long 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  4    2[COMMON] unsigned long 
   612 ;; Registers used:
   613 ;;		wreg
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         4       0       0       0       0
   620 ;;      Locals:         0       4       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         4       4       0       0       0
   623 ;;Total ram usage:        8 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_visualizar_display
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     014C                     _millis:	
   634                           ;psect for function _millis
   635                           
   636     014C                     l747:	
   637                           ;incstack = 0
   638                           ; Regs used in _millis: [wreg]
   639                           
   640                           
   641                           ;Codigo_fuente.c: 120:     uint32_t m;;Codigo_fuente.c: 121:     INTCONbits.GIE = 0;
   642     014C  138B               	bcf	11,7	;volatile
   643     014D                     l749:
   644                           
   645                           ;Codigo_fuente.c: 122:     m = milisegundos;
   646     014D  087B               	movf	_milisegundos+3,w
   647     014E  1283               	bcf	3,5	;RP0=0, select bank0
   648     014F  1303               	bcf	3,6	;RP1=0, select bank0
   649     0150  00A3               	movwf	millis@m+3
   650     0151  087A               	movf	_milisegundos+2,w
   651     0152  00A2               	movwf	millis@m+2
   652     0153  0879               	movf	_milisegundos+1,w
   653     0154  00A1               	movwf	millis@m+1
   654     0155  0878               	movf	_milisegundos,w
   655     0156  00A0               	movwf	millis@m
   656     0157                     l751:
   657                           
   658                           ;Codigo_fuente.c: 123:     INTCONbits.GIE = 1;
   659     0157  178B               	bsf	11,7	;volatile
   660                           
   661                           ;Codigo_fuente.c: 124:     return m;
   662     0158  0823               	movf	millis@m+3,w
   663     0159  00F5               	movwf	?_millis+3
   664     015A  0822               	movf	millis@m+2,w
   665     015B  00F4               	movwf	?_millis+2
   666     015C  0821               	movf	millis@m+1,w
   667     015D  00F3               	movwf	?_millis+1
   668     015E  0820               	movf	millis@m,w
   669     015F  00F2               	movwf	?_millis
   670     0160                     l37:
   671     0160  0008               	return
   672     0161                     __end_of_millis:
   673                           
   674                           	psect	text3
   675     009B                     __ptext3:	
   676 ;; *************** function ___awmod *****************
   677 ;; Defined at:
   678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  divisor         2    2[COMMON] int 
   681 ;;  dividend        2    4[COMMON] int 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  sign            1    7[COMMON] unsigned char 
   684 ;;  counter         1    6[COMMON] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    2[COMMON] int 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, btemp+1
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         4       0       0       0       0
   695 ;;      Locals:         2       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         6       0       0       0       0
   698 ;;Total ram usage:        6 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_visualizar_display
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708     009B                     ___awmod:	
   709                           ;psect for function ___awmod
   710                           
   711     009B                     l691:	
   712                           ;incstack = 0
   713                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   714                           
   715     009B  01F7               	clrf	___awmod@sign
   716     009C                     l693:
   717     009C  1FF5               	btfss	___awmod@dividend+1,7
   718     009D  289F               	goto	u141
   719     009E  28A0               	goto	u140
   720     009F                     u141:
   721     009F  28A7               	goto	l699
   722     00A0                     u140:
   723     00A0                     l695:
   724     00A0  09F4               	comf	___awmod@dividend,f
   725     00A1  09F5               	comf	___awmod@dividend+1,f
   726     00A2  0AF4               	incf	___awmod@dividend,f
   727     00A3  1903               	skipnz
   728     00A4  0AF5               	incf	___awmod@dividend+1,f
   729     00A5                     l697:
   730     00A5  01F7               	clrf	___awmod@sign
   731     00A6  0AF7               	incf	___awmod@sign,f
   732     00A7                     l699:
   733     00A7  1FF3               	btfss	___awmod@divisor+1,7
   734     00A8  28AA               	goto	u151
   735     00A9  28AB               	goto	u150
   736     00AA                     u151:
   737     00AA  28B0               	goto	l703
   738     00AB                     u150:
   739     00AB                     l701:
   740     00AB  09F2               	comf	___awmod@divisor,f
   741     00AC  09F3               	comf	___awmod@divisor+1,f
   742     00AD  0AF2               	incf	___awmod@divisor,f
   743     00AE  1903               	skipnz
   744     00AF  0AF3               	incf	___awmod@divisor+1,f
   745     00B0                     l703:
   746     00B0  0872               	movf	___awmod@divisor,w
   747     00B1  0473               	iorwf	___awmod@divisor+1,w
   748     00B2  1903               	btfsc	3,2
   749     00B3  28B5               	goto	u161
   750     00B4  28B6               	goto	u160
   751     00B5                     u161:
   752     00B5  28E5               	goto	l721
   753     00B6                     u160:
   754     00B6                     l705:
   755     00B6  01F6               	clrf	___awmod@counter
   756     00B7  0AF6               	incf	___awmod@counter,f
   757     00B8  28C4               	goto	l711
   758     00B9                     l707:
   759     00B9  3001               	movlw	1
   760     00BA                     u175:
   761     00BA  1003               	clrc
   762     00BB  0DF2               	rlf	___awmod@divisor,f
   763     00BC  0DF3               	rlf	___awmod@divisor+1,f
   764     00BD  3EFF               	addlw	-1
   765     00BE  1D03               	skipz
   766     00BF  28BA               	goto	u175
   767     00C0                     l709:
   768     00C0  3001               	movlw	1
   769     00C1  00FF               	movwf	btemp+1
   770     00C2  087F               	movf	btemp+1,w
   771     00C3  07F6               	addwf	___awmod@counter,f
   772     00C4                     l711:
   773     00C4  1FF3               	btfss	___awmod@divisor+1,7
   774     00C5  28C7               	goto	u181
   775     00C6  28C8               	goto	u180
   776     00C7                     u181:
   777     00C7  28B9               	goto	l707
   778     00C8                     u180:
   779     00C8                     l713:
   780     00C8  0873               	movf	___awmod@divisor+1,w
   781     00C9  0275               	subwf	___awmod@dividend+1,w
   782     00CA  1D03               	skipz
   783     00CB  28CE               	goto	u195
   784     00CC  0872               	movf	___awmod@divisor,w
   785     00CD  0274               	subwf	___awmod@dividend,w
   786     00CE                     u195:
   787     00CE  1C03               	skipc
   788     00CF  28D1               	goto	u191
   789     00D0  28D2               	goto	u190
   790     00D1                     u191:
   791     00D1  28D8               	goto	l717
   792     00D2                     u190:
   793     00D2                     l715:
   794     00D2  0872               	movf	___awmod@divisor,w
   795     00D3  02F4               	subwf	___awmod@dividend,f
   796     00D4  0873               	movf	___awmod@divisor+1,w
   797     00D5  1C03               	skipc
   798     00D6  03F5               	decf	___awmod@dividend+1,f
   799     00D7  02F5               	subwf	___awmod@dividend+1,f
   800     00D8                     l717:
   801     00D8  3001               	movlw	1
   802     00D9                     u205:
   803     00D9  1003               	clrc
   804     00DA  0CF3               	rrf	___awmod@divisor+1,f
   805     00DB  0CF2               	rrf	___awmod@divisor,f
   806     00DC  3EFF               	addlw	-1
   807     00DD  1D03               	skipz
   808     00DE  28D9               	goto	u205
   809     00DF                     l719:
   810     00DF  3001               	movlw	1
   811     00E0  02F6               	subwf	___awmod@counter,f
   812     00E1  1D03               	btfss	3,2
   813     00E2  28E4               	goto	u211
   814     00E3  28E5               	goto	u210
   815     00E4                     u211:
   816     00E4  28C8               	goto	l713
   817     00E5                     u210:
   818     00E5                     l721:
   819     00E5  0877               	movf	___awmod@sign,w
   820     00E6  1903               	btfsc	3,2
   821     00E7  28E9               	goto	u221
   822     00E8  28EA               	goto	u220
   823     00E9                     u221:
   824     00E9  28EF               	goto	l725
   825     00EA                     u220:
   826     00EA                     l723:
   827     00EA  09F4               	comf	___awmod@dividend,f
   828     00EB  09F5               	comf	___awmod@dividend+1,f
   829     00EC  0AF4               	incf	___awmod@dividend,f
   830     00ED  1903               	skipnz
   831     00EE  0AF5               	incf	___awmod@dividend+1,f
   832     00EF                     l725:
   833     00EF  0875               	movf	___awmod@dividend+1,w
   834     00F0  00F3               	movwf	?___awmod+1
   835     00F1  0874               	movf	___awmod@dividend,w
   836     00F2  00F2               	movwf	?___awmod
   837     00F3                     l303:
   838     00F3  0008               	return
   839     00F4                     __end_of___awmod:
   840                           
   841                           	psect	text4
   842     0174                     __ptext4:	
   843 ;; *************** function _configurar_tmr0 *****************
   844 ;; Defined at:
   845 ;;		line 102 in file "Codigo_fuente.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873     0174                     _configurar_tmr0:	
   874                           ;psect for function _configurar_tmr0
   875                           
   876     0174                     l647:	
   877                           ;incstack = 0
   878                           ; Regs used in _configurar_tmr0: [wreg+status,2+status,0]
   879                           
   880                           
   881                           ;Codigo_fuente.c: 104:     OPTION_REGbits.PS = 0b010;
   882     0174  1683               	bsf	3,5	;RP0=1, select bank1
   883     0175  1303               	bcf	3,6	;RP1=0, select bank1
   884     0176  0801               	movf	1,w	;volatile
   885     0177  39F8               	andlw	-8
   886     0178  3802               	iorlw	2
   887     0179  0081               	movwf	1	;volatile
   888     017A                     l649:
   889                           
   890                           ;Codigo_fuente.c: 105:     OPTION_REGbits.PSA = 0;
   891     017A  1181               	bcf	1,3	;volatile
   892     017B                     l651:
   893                           
   894                           ;Codigo_fuente.c: 106:     OPTION_REGbits.T0CS = 0;
   895     017B  1281               	bcf	1,5	;volatile
   896     017C                     l653:
   897                           
   898                           ;Codigo_fuente.c: 108:     INTCONbits.GIE = 1;
   899     017C  178B               	bsf	11,7	;volatile
   900     017D                     l655:
   901                           
   902                           ;Codigo_fuente.c: 109:     INTCONbits.T0IE = 1;
   903     017D  168B               	bsf	11,5	;volatile
   904     017E                     l657:
   905                           
   906                           ;Codigo_fuente.c: 110:     TMR0 = 131;
   907     017E  3083               	movlw	131
   908     017F  1283               	bcf	3,5	;RP0=0, select bank0
   909     0180  1303               	bcf	3,6	;RP1=0, select bank0
   910     0181  0081               	movwf	1	;volatile
   911     0182                     l28:
   912     0182  0008               	return
   913     0183                     __end_of_configurar_tmr0:
   914                           
   915                           	psect	text5
   916     0183                     __ptext5:	
   917 ;; *************** function _configurar_hardware *****************
   918 ;; Defined at:
   919 ;;		line 96 in file "Codigo_fuente.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     0183                     _configurar_hardware:	
   948                           ;psect for function _configurar_hardware
   949                           
   950     0183                     l641:	
   951                           ;incstack = 0
   952                           ; Regs used in _configurar_hardware: [wreg+status,2]
   953                           
   954                           
   955                           ;Codigo_fuente.c: 97:     TRISA = 0x00;
   956     0183  1683               	bsf	3,5	;RP0=1, select bank1
   957     0184  1303               	bcf	3,6	;RP1=0, select bank1
   958     0185  0185               	clrf	5	;volatile
   959                           
   960                           ;Codigo_fuente.c: 98:     TRISD = 0x00;
   961     0186  0188               	clrf	8	;volatile
   962     0187                     l643:
   963                           
   964                           ;Codigo_fuente.c: 99:     PORTA = 0x0F;
   965     0187  300F               	movlw	15
   966     0188  1283               	bcf	3,5	;RP0=0, select bank0
   967     0189  1303               	bcf	3,6	;RP1=0, select bank0
   968     018A  0085               	movwf	5	;volatile
   969     018B                     l645:
   970                           
   971                           ;Codigo_fuente.c: 100:     PORTD = 0xFF;
   972     018B  30FF               	movlw	255
   973     018C  0088               	movwf	8	;volatile
   974     018D                     l25:
   975     018D  0008               	return
   976     018E                     __end_of_configurar_hardware:
   977                           
   978                           	psect	text6
   979     012E                     __ptext6:	
   980 ;; *************** function _INT_TMR0 *****************
   981 ;; Defined at:
   982 ;;		line 112 in file "Codigo_fuente.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0
   999 ;;      Totals:         2       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		Interrupt level 1
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009     012E                     _INT_TMR0:	
  1010                           ;psect for function _INT_TMR0
  1011                           
  1012     012E                     i1l673:
  1013                           
  1014                           ;Codigo_fuente.c: 113:     if(INTCONbits.T0IF == 1){
  1015     012E  1D0B               	btfss	11,2	;volatile
  1016     012F  2931               	goto	u13_21
  1017     0130  2932               	goto	u13_20
  1018     0131                     u13_21:
  1019     0131  2945               	goto	i1l34
  1020     0132                     u13_20:
  1021     0132                     i1l675:
  1022                           
  1023                           ;Codigo_fuente.c: 114:         INTCONbits.T0IF = 0;
  1024     0132  110B               	bcf	11,2	;volatile
  1025     0133                     i1l677:
  1026                           
  1027                           ;Codigo_fuente.c: 115:         TMR0 = 131;
  1028     0133  3083               	movlw	131
  1029     0134  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0135  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0136  0081               	movwf	1	;volatile
  1032                           
  1033                           ;Codigo_fuente.c: 116:         milisegundos++;
  1034     0137  3001               	movlw	1
  1035     0138  07F8               	addwf	_milisegundos,f
  1036     0139  3000               	movlw	0
  1037     013A  1803               	skipnc
  1038     013B  3001               	movlw	1
  1039     013C  07F9               	addwf	_milisegundos+1,f
  1040     013D  3000               	movlw	0
  1041     013E  1803               	skipnc
  1042     013F  3001               	movlw	1
  1043     0140  07FA               	addwf	_milisegundos+2,f
  1044     0141  3000               	movlw	0
  1045     0142  1803               	skipnc
  1046     0143  3001               	movlw	1
  1047     0144  07FB               	addwf	_milisegundos+3,f
  1048     0145                     i1l34:
  1049     0145  0871               	movf	??_INT_TMR0+1,w
  1050     0146  008A               	movwf	10
  1051     0147  0E70               	swapf	??_INT_TMR0,w
  1052     0148  0083               	movwf	3
  1053     0149  0EFE               	swapf	btemp,f
  1054     014A  0E7E               	swapf	btemp,w
  1055     014B  0009               	retfie
  1056     014C                     __end_of_INT_TMR0:
  1057     007E                     btemp	set	126	;btemp
  1058     007E                     wtemp0	set	126
  1059                           
  1060                           	psect	intentry
  1061     0004                     __pintentry:	
  1062                           ;incstack = 0
  1063                           ; Regs used in _INT_TMR0: [wreg]
  1064                           
  1065     0004                     interrupt_function:
  1066     007E                     saved_w	set	btemp
  1067     0004  00FE               	movwf	btemp
  1068     0005  0E03               	swapf	3,w
  1069     0006  00F0               	movwf	??_INT_TMR0
  1070     0007  080A               	movf	10,w
  1071     0008  00F1               	movwf	??_INT_TMR0+1
  1072     0009  120A  118A  292E   	ljmp	_INT_TMR0
  1073                           
  1074                           	psect	config
  1075                           
  1076                           ;Config register CONFIG @ 0x2007
  1077                           ;	Oscillator Selection bits
  1078                           ;	FOSC = XT, XT oscillator
  1079                           ;	Watchdog Timer Enable bit
  1080                           ;	WDTE = OFF, WDT disabled
  1081                           ;	Power-up Timer Enable bit
  1082                           ;	PWRTE = OFF, PWRT disabled
  1083                           ;	Brown-out Reset Enable bit
  1084                           ;	BOREN = OFF, BOR disabled
  1085                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1086                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1087                           ;	Data EEPROM Memory Code Protection bit
  1088                           ;	CPD = OFF, Data EEPROM code protection off
  1089                           ;	Flash Program Memory Write Enable bits
  1090                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1091                           ;	In-Circuit Debugger Mode bit
  1092                           ;	DEBUG = 0x1, unprogrammed default
  1093                           ;	Flash Program Memory Code Protection bit
  1094                           ;	CP = OFF, Code protection off
  1095     2007                     	org	8199
  1096     2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    40
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     12      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _visualizar_display->___awmod

Critical Paths under _INT_TMR0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_visualizar_display
    _visualizar_display->_millis

Critical Paths under _INT_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     547
                _configurar_hardware
                    _configurar_tmr0
                 _visualizar_display
 ---------------------------------------------------------------------------------
 (1) _visualizar_display                                   8     8      0     547
                                              4 BANK0      8     8      0
                            ___awmod
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurar_tmr0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_hardware                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurar_hardware
   _configurar_tmr0
   _visualizar_display
     ___awmod
     _millis

 _INT_TMR0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 12 20:08:23 2025

                          pc 0002        ??_configurar_hardware 0072                           l25 018D  
                         l43 009A                           l28 0182                           l37 0160  
                         fsr 0004                          l303 00F3                          l701 00AB  
                        l711 00C4                          l703 00B0                          l641 0183  
                        l713 00C8                          l705 00B6                          l721 00E5  
                        l643 0187                          l651 017B                          l723 00EA  
                        l715 00D2                          l707 00B9                          l645 018B  
                        l653 017C                          l725 00EF                          l717 00D8  
                        l709 00C0                          l655 017D                          l647 0174  
                        l719 00DF                          l751 0157                          l657 017E  
                        l649 017A                          l761 0068                          l691 009B  
                        l747 014C                          l763 006C                          l755 0021  
                        l771 016B                          l693 009C                          l749 014D  
                        l765 0079                          l757 0030                          l695 00A0  
                        l767 0086                          l759 005E                          l697 00A5  
                        l769 0161                          l699 00A7                          u210 00E5  
                        u211 00E4                          u220 00EA                          u140 00A0  
                        u221 00E9                          u205 00D9                          u141 009F  
                        u150 00AB                          u151 00AA                          u160 00B6  
                        u161 00B5                          u180 00C8                          u181 00C7  
                        u261 003F                          u190 00D2                          u270 005E  
                        u262 0040                          u191 00D1                          u175 00BA  
                        u271 005D                          u263 0045                          u264 0046  
                        u273 005A                          u265 004B                          u266 004C  
                        u195 00CE                          u284 007F                          u285 007D  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0077  
                       i1l34 0145                         _TMR0 0001                         _main 0161  
                       btemp 007E                         start 000C             ?_configurar_tmr0 0070  
                      ?_main 0070              __end_of___awmod 00F4                        _DATOS 0106  
           __end_of_INT_TMR0 014C                        i1l673 012E                        i1l675 0132  
                      i1l677 0133                        u13_20 0132                        u13_21 0131  
                      _PORTA 0005                        _PORTD 0008                        _TRISA 0085  
                      _TRISD 0088                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000F                 __end_of_main 0174  
                     ??_main 0078                    ??___awmod 0076                       _millis 014C  
            ___awmod@divisor 0072              ___awmod@counter 0076                       saved_w 007E  
      visualizar_display@now 0028      __end_of__initialization 001D                __end_of_DATOS 012E  
                  ?_INT_TMR0 0070               __pcstackCOMMON 0070               _OPTION_REGbits 0081  
                 __pbssBANK0 002C  __end_of_configurar_hardware 018E                   ??_INT_TMR0 0070  
                 __pmaintext 0161                   __pintentry 0004                      ?_millis 0072  
                 __stringtab 0100                      ___awmod 009B                      __ptext1 0021  
                    __ptext2 014C                      __ptext3 009B                      __ptext4 0174  
                    __ptext5 0183                      __ptext6 012E             ___awmod@dividend 0074  
       end_of_initialization 001D                      millis@m 0020   visualizar_display@last_mux 002C  
             __end_of_millis 0161          start_initialization 000F            ??_configurar_tmr0 0072  
 __end_of_visualizar_display 009B                     ??_millis 0076                  __pbssCOMMON 0078  
                  ___latbits 0002                __pcstackBANK0 0020                     ?___awmod 0072  
                  __pstrings 0100            interrupt_function 0004                 _milisegundos 0078  
                   _INT_TMR0 012E                  __stringbase 0105              _configurar_tmr0 0174  
         __end_of__stringtab 0106           _visualizar_display 0021                   _INTCONbits 000B  
        ?_visualizar_display 0070                     intlevel1 0000          _configurar_hardware 0183  
    __end_of_configurar_tmr0 0183                    stringcode 0100         ??_visualizar_display 0024  
       ?_configurar_hardware 0070               _display_buffer 0030                     stringdir 0100  
                   stringtab 0100                _display_state 0033  
