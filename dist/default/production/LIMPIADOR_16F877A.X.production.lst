

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 12 20:15:32 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     018D                     __pidataBANK0:
   180                           
   181                           ;initializer for _display_buffer
   182     018D  3424               	retlw	36
   183     018E  3424               	retlw	36
   184     018F  3424               	retlw	36
   185                           
   186                           	psect	strings
   187     0101                     __pstrings:
   188     0101                     stringtab:
   189     0101                     __stringtab:
   190     0101                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193     0101                     stringdir:
   194     0101  3001               	movlw	high stringdir
   195     0102  008A               	movwf	10
   196     0103  0804               	movf	4,w
   197     0104  0A84               	incf	4,f
   198     0105  0782               	addwf	2,f
   199     0106                     __stringbase:
   200     0106  3400               	retlw	0
   201     0107                     __end_of__stringtab:
   202     0107                     _DATOS:
   203     0107  34C0               	retlw	192
   204     0108  34F9               	retlw	249
   205     0109  34A4               	retlw	164
   206     010A  34B0               	retlw	176
   207     010B  3499               	retlw	153
   208     010C  3492               	retlw	146
   209     010D  3482               	retlw	130
   210     010E  34F8               	retlw	248
   211     010F  3480               	retlw	128
   212     0110  3490               	retlw	144
   213     0111  3488               	retlw	136
   214     0112  3483               	retlw	131
   215     0113  34C6               	retlw	198
   216     0114  34A1               	retlw	161
   217     0115  3486               	retlw	134
   218     0116  348E               	retlw	142
   219     0117  34C2               	retlw	194
   220     0118  3489               	retlw	137
   221     0119  34CF               	retlw	207
   222     011A  34E1               	retlw	225
   223     011B  3489               	retlw	137
   224     011C  34C7               	retlw	199
   225     011D  34C8               	retlw	200
   226     011E  34AB               	retlw	171
   227     011F  34C0               	retlw	192
   228     0120  348C               	retlw	140
   229     0121  3498               	retlw	152
   230     0122  34AF               	retlw	175
   231     0123  3492               	retlw	146
   232     0124  3487               	retlw	135
   233     0125  34C1               	retlw	193
   234     0126  34C1               	retlw	193
   235     0127  34D5               	retlw	213
   236     0128  3489               	retlw	137
   237     0129  3491               	retlw	145
   238     012A  34A4               	retlw	164
   239     012B  34BF               	retlw	191
   240     012C  347F               	retlw	127
   241     012D  349C               	retlw	156
   242     012E  34FF               	retlw	255
   243     012F                     __end_of_DATOS:
   244     0001                     _TMR0	set	1
   245     000B                     _INTCONbits	set	11
   246     0008                     _PORTD	set	8
   247     0005                     _PORTA	set	5
   248     0081                     _OPTION_REGbits	set	129
   249     0088                     _TRISD	set	136
   250     0085                     _TRISA	set	133
   251                           
   252                           	psect	cinit
   253     000F                     start_initialization:	
   254                           ; #config settings
   255                           
   256     000F                     __initialization:
   257                           
   258                           ; Initialize objects allocated to BANK0
   259     000F  120A  118A  218D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   260     0014  00B1               	movwf	__pdataBANK0& (0+127)
   261     0015  120A  118A  218E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   262     001A  00B2               	movwf	(__pdataBANK0+1)& (0+127)
   263     001B  120A  118A  218F  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   264     0020  00B3               	movwf	(__pdataBANK0+2)& (0+127)
   265                           
   266                           ; Clear objects allocated to BANK0
   267     0021  01AC               	clrf	__pbssBANK0& (0+127)
   268     0022  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   269     0023  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   270     0024  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   271     0025  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274     0026  01F8               	clrf	__pbssCOMMON& (0+127)
   275     0027  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   276     0028  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   277     0029  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   278     002A                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     002A                     __end_of__initialization:
   282     002A  0183               	clrf	3
   283     002B  120A  118A  2962   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286     0078                     __pbssCOMMON:
   287     0078                     _milisegundos:
   288     0078                     	ds	4
   289                           
   290                           	psect	bssBANK0
   291     002C                     __pbssBANK0:
   292     002C                     visualizar_display@last_mux:
   293     002C                     	ds	4
   294     0030                     _display_state:
   295     0030                     	ds	1
   296                           
   297                           	psect	dataBANK0
   298     0031                     __pdataBANK0:
   299     0031                     _display_buffer:
   300     0031                     	ds	3
   301                           
   302                           	psect	cstackCOMMON
   303     0070                     __pcstackCOMMON:
   304     0070                     ?_configurar_hardware:
   305     0070                     ?_configurar_tmr0:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_INT_TMR0:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_INT_TMR0:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_visualizar_display:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322     0070                     	ds	2
   323     0072                     ??_configurar_hardware:
   324     0072                     ??_configurar_tmr0:	
   325                           ; 1 bytes @ 0x2
   326                           
   327     0072                     ?___awmod:	
   328                           ; 1 bytes @ 0x2
   329                           
   330     0072                     ?_millis:	
   331                           ; 2 bytes @ 0x2
   332                           
   333     0072                     ___awmod@divisor:	
   334                           ; 4 bytes @ 0x2
   335                           
   336                           
   337                           ; 2 bytes @ 0x2
   338     0072                     	ds	2
   339     0074                     ___awmod@dividend:
   340                           
   341                           ; 2 bytes @ 0x4
   342     0074                     	ds	2
   343     0076                     ??_millis:
   344     0076                     ??___awmod:	
   345                           ; 1 bytes @ 0x6
   346                           
   347     0076                     ___awmod@counter:	
   348                           ; 1 bytes @ 0x6
   349                           
   350                           
   351                           ; 1 bytes @ 0x6
   352     0076                     	ds	1
   353     0077                     ___awmod@sign:
   354                           
   355                           ; 1 bytes @ 0x7
   356     0077                     	ds	1
   357     0078                     ??_main:
   358                           
   359                           	psect	cstackBANK0
   360     0020                     __pcstackBANK0:	
   361                           ; 1 bytes @ 0x8
   362                           
   363     0020                     millis@m:
   364                           
   365                           ; 4 bytes @ 0x0
   366     0020                     	ds	4
   367     0024                     ??_visualizar_display:
   368                           
   369                           ; 1 bytes @ 0x4
   370     0024                     	ds	4
   371     0028                     visualizar_display@now:
   372                           
   373                           ; 4 bytes @ 0x8
   374     0028                     	ds	4
   375                           
   376                           	psect	maintext
   377     0162                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 142 in file "Codigo_fuente.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels required when called: 3
   403 ;; This function calls:
   404 ;;		_configurar_hardware
   405 ;;		_configurar_tmr0
   406 ;;		_visualizar_display
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412     0162                     _main:	
   413                           ;psect for function _main
   414                           
   415     0162                     l769:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   418                           
   419                           
   420                           ;Codigo_fuente.c: 143:     configurar_hardware();
   421     0162  120A  118A  2184  120A  118A  	fcall	_configurar_hardware
   422     0167                     l771:
   423                           
   424                           ;Codigo_fuente.c: 144:     configurar_tmr0();
   425     0167  120A  118A  2175  120A  118A  	fcall	_configurar_tmr0
   426     016C                     l773:
   427                           
   428                           ;Codigo_fuente.c: 146:         visualizar_display();
   429     016C  120A  118A  202E  120A  118A  	fcall	_visualizar_display
   430     0171  296C               	goto	l773
   431     0172  120A  118A  280C   	ljmp	start
   432     0175                     __end_of_main:
   433                           
   434                           	psect	text1
   435     002E                     __ptext1:	
   436 ;; *************** function _visualizar_display *****************
   437 ;; Defined at:
   438 ;;		line 126 in file "Codigo_fuente.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  now             4    8[BANK0 ] unsigned long 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       4       0       0       0
   454 ;;      Temps:          0       4       0       0       0
   455 ;;      Totals:         0       8       0       0       0
   456 ;;Total ram usage:        8 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 2
   459 ;; This function calls:
   460 ;;		___awmod
   461 ;;		_millis
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467     002E                     _visualizar_display:	
   468                           ;psect for function _visualizar_display
   469                           
   470     002E                     l755:	
   471                           ;incstack = 0
   472                           ; Regs used in _visualizar_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   473                           
   474                           
   475                           ;Codigo_fuente.c: 127:     static uint32_t last_mux = 0;;Codigo_fuente.c: 128:     uint3
      +                          2_t now = millis();
   476     002E  120A  118A  214D  120A  118A  	fcall	_millis
   477     0033  0875               	movf	?_millis+3,w
   478     0034  1283               	bcf	3,5	;RP0=0, select bank0
   479     0035  1303               	bcf	3,6	;RP1=0, select bank0
   480     0036  00AB               	movwf	visualizar_display@now+3
   481     0037  0874               	movf	?_millis+2,w
   482     0038  00AA               	movwf	visualizar_display@now+2
   483     0039  0873               	movf	?_millis+1,w
   484     003A  00A9               	movwf	visualizar_display@now+1
   485     003B  0872               	movf	?_millis,w
   486     003C  00A8               	movwf	visualizar_display@now
   487     003D                     l757:
   488                           
   489                           ;Codigo_fuente.c: 130:     if((now - last_mux) >= 5){
   490     003D  0828               	movf	visualizar_display@now,w
   491     003E  00A4               	movwf	??_visualizar_display
   492     003F  0829               	movf	visualizar_display@now+1,w
   493     0040  00A5               	movwf	??_visualizar_display+1
   494     0041  082A               	movf	visualizar_display@now+2,w
   495     0042  00A6               	movwf	??_visualizar_display+2
   496     0043  082B               	movf	visualizar_display@now+3,w
   497     0044  00A7               	movwf	??_visualizar_display+3
   498     0045  082C               	movf	visualizar_display@last_mux,w
   499     0046  02A4               	subwf	??_visualizar_display,f
   500     0047  082D               	movf	visualizar_display@last_mux+1,w
   501     0048  1C03               	skipc
   502     0049  0F2D               	incfsz	visualizar_display@last_mux+1,w
   503     004A  284C               	goto	u261
   504     004B  284D               	goto	u262
   505     004C                     u261:
   506     004C  02A5               	subwf	??_visualizar_display+1,f
   507     004D                     u262:
   508     004D  082E               	movf	visualizar_display@last_mux+2,w
   509     004E  1C03               	skipc
   510     004F  0F2E               	incfsz	visualizar_display@last_mux+2,w
   511     0050  2852               	goto	u263
   512     0051  2853               	goto	u264
   513     0052                     u263:
   514     0052  02A6               	subwf	??_visualizar_display+2,f
   515     0053                     u264:
   516     0053  082F               	movf	visualizar_display@last_mux+3,w
   517     0054  1C03               	skipc
   518     0055  0F2F               	incfsz	visualizar_display@last_mux+3,w
   519     0056  2858               	goto	u265
   520     0057  2859               	goto	u266
   521     0058                     u265:
   522     0058  02A7               	subwf	??_visualizar_display+3,f
   523     0059                     u266:
   524     0059  0827               	movf	??_visualizar_display+3,w
   525     005A  1D03               	btfss	3,2
   526     005B  286A               	goto	u270
   527     005C  0826               	movf	??_visualizar_display+2,w
   528     005D  1D03               	btfss	3,2
   529     005E  286A               	goto	u270
   530     005F  0825               	movf	??_visualizar_display+1,w
   531     0060  1D03               	btfss	3,2
   532     0061  286A               	goto	u270
   533     0062  3005               	movlw	5
   534     0063  0224               	subwf	??_visualizar_display,w
   535     0064  1D03               	skipz
   536     0065  2866               	goto	u273
   537     0066                     u273:
   538     0066  1C03               	btfss	3,0
   539     0067  2869               	goto	u271
   540     0068  286A               	goto	u270
   541     0069                     u271:
   542     0069  28A7               	goto	l43
   543     006A                     u270:
   544     006A                     l759:
   545                           
   546                           ;Codigo_fuente.c: 131:         last_mux = now;
   547     006A  1283               	bcf	3,5	;RP0=0, select bank0
   548     006B  1303               	bcf	3,6	;RP1=0, select bank0
   549     006C  082B               	movf	visualizar_display@now+3,w
   550     006D  00AF               	movwf	visualizar_display@last_mux+3
   551     006E  082A               	movf	visualizar_display@now+2,w
   552     006F  00AE               	movwf	visualizar_display@last_mux+2
   553     0070  0829               	movf	visualizar_display@now+1,w
   554     0071  00AD               	movwf	visualizar_display@last_mux+1
   555     0072  0828               	movf	visualizar_display@now,w
   556     0073  00AC               	movwf	visualizar_display@last_mux
   557     0074                     l761:
   558                           
   559                           ;Codigo_fuente.c: 133:         PORTA &= ~0x0F;
   560     0074  30F0               	movlw	240
   561     0075  00FF               	movwf	btemp+1
   562     0076  087F               	movf	btemp+1,w
   563     0077  0585               	andwf	5,f	;volatile
   564     0078                     l763:
   565                           
   566                           ;Codigo_fuente.c: 135:         PORTD = DATOS[display_buffer[display_state]];
   567     0078  0830               	movf	_display_state,w
   568     0079  3E31               	addlw	(low (_display_buffer| 0))& (0+255)
   569     007A  0084               	movwf	4
   570     007B  1383               	bcf	3,7	;select IRP bank0
   571     007C  0800               	movf	0,w
   572     007D  3E01               	addlw	low ((_DATOS-__stringbase)| (0+32768))
   573     007E  0084               	movwf	4
   574     007F  120A  118A  2101  120A  118A  	fcall	stringdir
   575     0084  0088               	movwf	8	;volatile
   576     0085                     l765:
   577                           
   578                           ;Codigo_fuente.c: 137:         PORTA |= ~(1 << display_state);
   579     0085  3001               	movlw	1
   580     0086  00A4               	movwf	??_visualizar_display
   581     0087  0A30               	incf	_display_state,w
   582     0088  288B               	goto	u284
   583     0089                     u285:
   584     0089  1003               	clrc
   585     008A  0DA4               	rlf	??_visualizar_display,f
   586     008B                     u284:
   587     008B  3EFF               	addlw	-1
   588     008C  1D03               	skipz
   589     008D  2889               	goto	u285
   590     008E  0824               	movf	??_visualizar_display,w
   591     008F  3AFF               	xorlw	255
   592     0090  00FF               	movwf	btemp+1
   593     0091  087F               	movf	btemp+1,w
   594     0092  0485               	iorwf	5,f	;volatile
   595     0093                     l767:
   596                           
   597                           ;Codigo_fuente.c: 139:         display_state = (display_state + 1) % 3;
   598     0093  3003               	movlw	3
   599     0094  00F2               	movwf	___awmod@divisor
   600     0095  3000               	movlw	0
   601     0096  00F3               	movwf	___awmod@divisor+1
   602     0097  0830               	movf	_display_state,w
   603     0098  3E01               	addlw	1
   604     0099  00F4               	movwf	___awmod@dividend
   605     009A  3000               	movlw	0
   606     009B  1803               	skipnc
   607     009C  3001               	movlw	1
   608     009D  00F5               	movwf	___awmod@dividend+1
   609     009E  120A  118A  20A8  120A  118A  	fcall	___awmod
   610     00A3  0872               	movf	?___awmod,w
   611     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   612     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   613     00A6  00B0               	movwf	_display_state
   614     00A7                     l43:
   615     00A7  0008               	return
   616     00A8                     __end_of_visualizar_display:
   617                           
   618                           	psect	text2
   619     014D                     __ptext2:	
   620 ;; *************** function _millis *****************
   621 ;; Defined at:
   622 ;;		line 119 in file "Codigo_fuente.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  m               4    0[BANK0 ] unsigned long 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  4    2[COMMON] unsigned long 
   629 ;; Registers used:
   630 ;;		wreg
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         4       0       0       0       0
   637 ;;      Locals:         0       4       0       0       0
   638 ;;      Temps:          0       0       0       0       0
   639 ;;      Totals:         4       4       0       0       0
   640 ;;Total ram usage:        8 bytes
   641 ;; Hardware stack levels used: 1
   642 ;; Hardware stack levels required when called: 1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_visualizar_display
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650     014D                     _millis:	
   651                           ;psect for function _millis
   652                           
   653     014D                     l747:	
   654                           ;incstack = 0
   655                           ; Regs used in _millis: [wreg]
   656                           
   657                           
   658                           ;Codigo_fuente.c: 120:     uint32_t m;;Codigo_fuente.c: 121:     INTCONbits.GIE = 0;
   659     014D  138B               	bcf	11,7	;volatile
   660     014E                     l749:
   661                           
   662                           ;Codigo_fuente.c: 122:     m = milisegundos;
   663     014E  087B               	movf	_milisegundos+3,w
   664     014F  1283               	bcf	3,5	;RP0=0, select bank0
   665     0150  1303               	bcf	3,6	;RP1=0, select bank0
   666     0151  00A3               	movwf	millis@m+3
   667     0152  087A               	movf	_milisegundos+2,w
   668     0153  00A2               	movwf	millis@m+2
   669     0154  0879               	movf	_milisegundos+1,w
   670     0155  00A1               	movwf	millis@m+1
   671     0156  0878               	movf	_milisegundos,w
   672     0157  00A0               	movwf	millis@m
   673     0158                     l751:
   674                           
   675                           ;Codigo_fuente.c: 123:     INTCONbits.GIE = 1;
   676     0158  178B               	bsf	11,7	;volatile
   677                           
   678                           ;Codigo_fuente.c: 124:     return m;
   679     0159  0823               	movf	millis@m+3,w
   680     015A  00F5               	movwf	?_millis+3
   681     015B  0822               	movf	millis@m+2,w
   682     015C  00F4               	movwf	?_millis+2
   683     015D  0821               	movf	millis@m+1,w
   684     015E  00F3               	movwf	?_millis+1
   685     015F  0820               	movf	millis@m,w
   686     0160  00F2               	movwf	?_millis
   687     0161                     l37:
   688     0161  0008               	return
   689     0162                     __end_of_millis:
   690                           
   691                           	psect	text3
   692     00A8                     __ptext3:	
   693 ;; *************** function ___awmod *****************
   694 ;; Defined at:
   695 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  divisor         2    2[COMMON] int 
   698 ;;  dividend        2    4[COMMON] int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  sign            1    7[COMMON] unsigned char 
   701 ;;  counter         1    6[COMMON] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  2    2[COMMON] int 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, btemp+1
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         4       0       0       0       0
   712 ;;      Locals:         2       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         6       0       0       0       0
   715 ;;Total ram usage:        6 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_visualizar_display
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     00A8                     ___awmod:	
   726                           ;psect for function ___awmod
   727                           
   728     00A8                     l689:	
   729                           ;incstack = 0
   730                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   731                           
   732     00A8  01F7               	clrf	___awmod@sign
   733     00A9                     l691:
   734     00A9  1FF5               	btfss	___awmod@dividend+1,7
   735     00AA  28AC               	goto	u141
   736     00AB  28AD               	goto	u140
   737     00AC                     u141:
   738     00AC  28B4               	goto	l697
   739     00AD                     u140:
   740     00AD                     l693:
   741     00AD  09F4               	comf	___awmod@dividend,f
   742     00AE  09F5               	comf	___awmod@dividend+1,f
   743     00AF  0AF4               	incf	___awmod@dividend,f
   744     00B0  1903               	skipnz
   745     00B1  0AF5               	incf	___awmod@dividend+1,f
   746     00B2                     l695:
   747     00B2  01F7               	clrf	___awmod@sign
   748     00B3  0AF7               	incf	___awmod@sign,f
   749     00B4                     l697:
   750     00B4  1FF3               	btfss	___awmod@divisor+1,7
   751     00B5  28B7               	goto	u151
   752     00B6  28B8               	goto	u150
   753     00B7                     u151:
   754     00B7  28BD               	goto	l701
   755     00B8                     u150:
   756     00B8                     l699:
   757     00B8  09F2               	comf	___awmod@divisor,f
   758     00B9  09F3               	comf	___awmod@divisor+1,f
   759     00BA  0AF2               	incf	___awmod@divisor,f
   760     00BB  1903               	skipnz
   761     00BC  0AF3               	incf	___awmod@divisor+1,f
   762     00BD                     l701:
   763     00BD  0872               	movf	___awmod@divisor,w
   764     00BE  0473               	iorwf	___awmod@divisor+1,w
   765     00BF  1903               	btfsc	3,2
   766     00C0  28C2               	goto	u161
   767     00C1  28C3               	goto	u160
   768     00C2                     u161:
   769     00C2  28F2               	goto	l719
   770     00C3                     u160:
   771     00C3                     l703:
   772     00C3  01F6               	clrf	___awmod@counter
   773     00C4  0AF6               	incf	___awmod@counter,f
   774     00C5  28D1               	goto	l709
   775     00C6                     l705:
   776     00C6  3001               	movlw	1
   777     00C7                     u175:
   778     00C7  1003               	clrc
   779     00C8  0DF2               	rlf	___awmod@divisor,f
   780     00C9  0DF3               	rlf	___awmod@divisor+1,f
   781     00CA  3EFF               	addlw	-1
   782     00CB  1D03               	skipz
   783     00CC  28C7               	goto	u175
   784     00CD                     l707:
   785     00CD  3001               	movlw	1
   786     00CE  00FF               	movwf	btemp+1
   787     00CF  087F               	movf	btemp+1,w
   788     00D0  07F6               	addwf	___awmod@counter,f
   789     00D1                     l709:
   790     00D1  1FF3               	btfss	___awmod@divisor+1,7
   791     00D2  28D4               	goto	u181
   792     00D3  28D5               	goto	u180
   793     00D4                     u181:
   794     00D4  28C6               	goto	l705
   795     00D5                     u180:
   796     00D5                     l711:
   797     00D5  0873               	movf	___awmod@divisor+1,w
   798     00D6  0275               	subwf	___awmod@dividend+1,w
   799     00D7  1D03               	skipz
   800     00D8  28DB               	goto	u195
   801     00D9  0872               	movf	___awmod@divisor,w
   802     00DA  0274               	subwf	___awmod@dividend,w
   803     00DB                     u195:
   804     00DB  1C03               	skipc
   805     00DC  28DE               	goto	u191
   806     00DD  28DF               	goto	u190
   807     00DE                     u191:
   808     00DE  28E5               	goto	l715
   809     00DF                     u190:
   810     00DF                     l713:
   811     00DF  0872               	movf	___awmod@divisor,w
   812     00E0  02F4               	subwf	___awmod@dividend,f
   813     00E1  0873               	movf	___awmod@divisor+1,w
   814     00E2  1C03               	skipc
   815     00E3  03F5               	decf	___awmod@dividend+1,f
   816     00E4  02F5               	subwf	___awmod@dividend+1,f
   817     00E5                     l715:
   818     00E5  3001               	movlw	1
   819     00E6                     u205:
   820     00E6  1003               	clrc
   821     00E7  0CF3               	rrf	___awmod@divisor+1,f
   822     00E8  0CF2               	rrf	___awmod@divisor,f
   823     00E9  3EFF               	addlw	-1
   824     00EA  1D03               	skipz
   825     00EB  28E6               	goto	u205
   826     00EC                     l717:
   827     00EC  3001               	movlw	1
   828     00ED  02F6               	subwf	___awmod@counter,f
   829     00EE  1D03               	btfss	3,2
   830     00EF  28F1               	goto	u211
   831     00F0  28F2               	goto	u210
   832     00F1                     u211:
   833     00F1  28D5               	goto	l711
   834     00F2                     u210:
   835     00F2                     l719:
   836     00F2  0877               	movf	___awmod@sign,w
   837     00F3  1903               	btfsc	3,2
   838     00F4  28F6               	goto	u221
   839     00F5  28F7               	goto	u220
   840     00F6                     u221:
   841     00F6  28FC               	goto	l723
   842     00F7                     u220:
   843     00F7                     l721:
   844     00F7  09F4               	comf	___awmod@dividend,f
   845     00F8  09F5               	comf	___awmod@dividend+1,f
   846     00F9  0AF4               	incf	___awmod@dividend,f
   847     00FA  1903               	skipnz
   848     00FB  0AF5               	incf	___awmod@dividend+1,f
   849     00FC                     l723:
   850     00FC  0875               	movf	___awmod@dividend+1,w
   851     00FD  00F3               	movwf	?___awmod+1
   852     00FE  0874               	movf	___awmod@dividend,w
   853     00FF  00F2               	movwf	?___awmod
   854     0100                     l303:
   855     0100  0008               	return
   856     0101                     __end_of___awmod:
   857                           
   858                           	psect	text4
   859     0175                     __ptext4:	
   860 ;; *************** function _configurar_tmr0 *****************
   861 ;; Defined at:
   862 ;;		line 102 in file "Codigo_fuente.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     0175                     _configurar_tmr0:	
   891                           ;psect for function _configurar_tmr0
   892                           
   893     0175                     l643:	
   894                           ;incstack = 0
   895                           ; Regs used in _configurar_tmr0: [wreg+status,2+status,0]
   896                           
   897                           
   898                           ;Codigo_fuente.c: 104:     OPTION_REGbits.PS = 0b010;
   899     0175  1683               	bsf	3,5	;RP0=1, select bank1
   900     0176  1303               	bcf	3,6	;RP1=0, select bank1
   901     0177  0801               	movf	1,w	;volatile
   902     0178  39F8               	andlw	-8
   903     0179  3802               	iorlw	2
   904     017A  0081               	movwf	1	;volatile
   905     017B                     l645:
   906                           
   907                           ;Codigo_fuente.c: 105:     OPTION_REGbits.PSA = 0;
   908     017B  1181               	bcf	1,3	;volatile
   909     017C                     l647:
   910                           
   911                           ;Codigo_fuente.c: 106:     OPTION_REGbits.T0CS = 0;
   912     017C  1281               	bcf	1,5	;volatile
   913     017D                     l649:
   914                           
   915                           ;Codigo_fuente.c: 108:     INTCONbits.GIE = 1;
   916     017D  178B               	bsf	11,7	;volatile
   917     017E                     l651:
   918                           
   919                           ;Codigo_fuente.c: 109:     INTCONbits.T0IE = 1;
   920     017E  168B               	bsf	11,5	;volatile
   921     017F                     l653:
   922                           
   923                           ;Codigo_fuente.c: 110:     TMR0 = 131;
   924     017F  3083               	movlw	131
   925     0180  1283               	bcf	3,5	;RP0=0, select bank0
   926     0181  1303               	bcf	3,6	;RP1=0, select bank0
   927     0182  0081               	movwf	1	;volatile
   928     0183                     l28:
   929     0183  0008               	return
   930     0184                     __end_of_configurar_tmr0:
   931                           
   932                           	psect	text5
   933     0184                     __ptext5:	
   934 ;; *************** function _configurar_hardware *****************
   935 ;; Defined at:
   936 ;;		line 96 in file "Codigo_fuente.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		status,2
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964     0184                     _configurar_hardware:	
   965                           ;psect for function _configurar_hardware
   966                           
   967     0184                     l641:	
   968                           ;incstack = 0
   969                           ; Regs used in _configurar_hardware: [status,2]
   970                           
   971                           
   972                           ;Codigo_fuente.c: 97:     TRISA = 0x00;
   973     0184  1683               	bsf	3,5	;RP0=1, select bank1
   974     0185  1303               	bcf	3,6	;RP1=0, select bank1
   975     0186  0185               	clrf	5	;volatile
   976                           
   977                           ;Codigo_fuente.c: 98:     TRISD = 0x00;
   978     0187  0188               	clrf	8	;volatile
   979                           
   980                           ;Codigo_fuente.c: 99:     PORTA = 0x00;
   981     0188  1283               	bcf	3,5	;RP0=0, select bank0
   982     0189  1303               	bcf	3,6	;RP1=0, select bank0
   983     018A  0185               	clrf	5	;volatile
   984                           
   985                           ;Codigo_fuente.c: 100:     PORTD = 0x00;
   986     018B  0188               	clrf	8	;volatile
   987     018C                     l25:
   988     018C  0008               	return
   989     018D                     __end_of_configurar_hardware:
   990                           
   991                           	psect	text6
   992     012F                     __ptext6:	
   993 ;; *************** function _INT_TMR0 *****************
   994 ;; Defined at:
   995 ;;		line 112 in file "Codigo_fuente.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          2       0       0       0       0
  1012 ;;      Totals:         2       0       0       0       0
  1013 ;;Total ram usage:        2 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		Interrupt level 1
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022     012F                     _INT_TMR0:	
  1023                           ;psect for function _INT_TMR0
  1024                           
  1025     012F                     i1l669:
  1026                           
  1027                           ;Codigo_fuente.c: 113:     if(INTCONbits.T0IF == 1){
  1028     012F  1D0B               	btfss	11,2	;volatile
  1029     0130  2932               	goto	u13_21
  1030     0131  2933               	goto	u13_20
  1031     0132                     u13_21:
  1032     0132  2946               	goto	i1l34
  1033     0133                     u13_20:
  1034     0133                     i1l671:
  1035                           
  1036                           ;Codigo_fuente.c: 114:         INTCONbits.T0IF = 0;
  1037     0133  110B               	bcf	11,2	;volatile
  1038     0134                     i1l673:
  1039                           
  1040                           ;Codigo_fuente.c: 115:         TMR0 = 131;
  1041     0134  3083               	movlw	131
  1042     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1044     0137  0081               	movwf	1	;volatile
  1045                           
  1046                           ;Codigo_fuente.c: 116:         milisegundos++;
  1047     0138  3001               	movlw	1
  1048     0139  07F8               	addwf	_milisegundos,f
  1049     013A  3000               	movlw	0
  1050     013B  1803               	skipnc
  1051     013C  3001               	movlw	1
  1052     013D  07F9               	addwf	_milisegundos+1,f
  1053     013E  3000               	movlw	0
  1054     013F  1803               	skipnc
  1055     0140  3001               	movlw	1
  1056     0141  07FA               	addwf	_milisegundos+2,f
  1057     0142  3000               	movlw	0
  1058     0143  1803               	skipnc
  1059     0144  3001               	movlw	1
  1060     0145  07FB               	addwf	_milisegundos+3,f
  1061     0146                     i1l34:
  1062     0146  0871               	movf	??_INT_TMR0+1,w
  1063     0147  008A               	movwf	10
  1064     0148  0E70               	swapf	??_INT_TMR0,w
  1065     0149  0083               	movwf	3
  1066     014A  0EFE               	swapf	btemp,f
  1067     014B  0E7E               	swapf	btemp,w
  1068     014C  0009               	retfie
  1069     014D                     __end_of_INT_TMR0:
  1070     007E                     btemp	set	126	;btemp
  1071     007E                     wtemp0	set	126
  1072                           
  1073                           	psect	intentry
  1074     0004                     __pintentry:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _INT_TMR0: [wreg]
  1077                           
  1078     0004                     interrupt_function:
  1079     007E                     saved_w	set	btemp
  1080     0004  00FE               	movwf	btemp
  1081     0005  0E03               	swapf	3,w
  1082     0006  00F0               	movwf	??_INT_TMR0
  1083     0007  080A               	movf	10,w
  1084     0008  00F1               	movwf	??_INT_TMR0+1
  1085     0009  120A  118A  292F   	ljmp	_INT_TMR0
  1086                           
  1087                           	psect	config
  1088                           
  1089                           ;Config register CONFIG @ 0x2007
  1090                           ;	Oscillator Selection bits
  1091                           ;	FOSC = XT, XT oscillator
  1092                           ;	Watchdog Timer Enable bit
  1093                           ;	WDTE = OFF, WDT disabled
  1094                           ;	Power-up Timer Enable bit
  1095                           ;	PWRTE = OFF, PWRT disabled
  1096                           ;	Brown-out Reset Enable bit
  1097                           ;	BOREN = OFF, BOR disabled
  1098                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1099                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1100                           ;	Data EEPROM Memory Code Protection bit
  1101                           ;	CPD = OFF, Data EEPROM code protection off
  1102                           ;	Flash Program Memory Write Enable bits
  1103                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1104                           ;	In-Circuit Debugger Mode bit
  1105                           ;	DEBUG = 0x1, unprogrammed default
  1106                           ;	Flash Program Memory Code Protection bit
  1107                           ;	CP = OFF, Code protection off
  1108     2007                     	org	8199
  1109     2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    40
    Data        3
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     12      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _visualizar_display->___awmod

Critical Paths under _INT_TMR0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_visualizar_display
    _visualizar_display->_millis

Critical Paths under _INT_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     547
                _configurar_hardware
                    _configurar_tmr0
                 _visualizar_display
 ---------------------------------------------------------------------------------
 (1) _visualizar_display                                   8     8      0     547
                                              4 BANK0      8     8      0
                            ___awmod
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurar_tmr0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_hardware                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_TMR0                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurar_hardware
   _configurar_tmr0
   _visualizar_display
     ___awmod
     _millis

 _INT_TMR0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 12 20:15:32 2025

                          pc 0002        ??_configurar_hardware 0072                           l25 018C  
                         l43 00A7                           l28 0183                           l37 0161  
                         fsr 0004                          l303 0100                          l701 00BD  
                        l711 00D5                          l703 00C3                          l641 0184  
                        l721 00F7                          l713 00DF                          l705 00C6  
                        l651 017E                          l643 0175                          l723 00FC  
                        l715 00E5                          l707 00CD                          l653 017F  
                        l645 017B                          l717 00EC                          l709 00D1  
                        l647 017C                          l719 00F2                          l751 0158  
                        l649 017D                          l761 0074                          l691 00A9  
                        l747 014D                          l763 0078                          l755 002E  
                        l771 0167                          l693 00AD                          l749 014E  
                        l765 0085                          l757 003D                          l773 016C  
                        l695 00B2                          l767 0093                          l759 006A  
                        l697 00B4                          l689 00A8                          l769 0162  
                        l699 00B8                          u210 00F2                          u211 00F1  
                        u220 00F7                          u140 00AD                          u221 00F6  
                        u205 00E6                          u141 00AC                          u150 00B8  
                        u151 00B7                          u160 00C3                          u161 00C2  
                        u180 00D5                          u181 00D4                          u261 004C  
                        u190 00DF                          u270 006A                          u262 004D  
                        u191 00DE                          u175 00C7                          u271 0069  
                        u263 0052                          u264 0053                          u273 0066  
                        u265 0058                          u266 0059                          u195 00DB  
                        u284 008B                          u285 0089                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0077                         i1l34 0146  
                       _TMR0 0001                         _main 0162                         btemp 007E  
                       start 000C             ?_configurar_tmr0 0070                        ?_main 0070  
            __end_of___awmod 0101                        _DATOS 0107             __end_of_INT_TMR0 014D  
                      i1l671 0133                        i1l673 0134                        i1l669 012F  
                      u13_20 0133                        u13_21 0132                        _PORTA 0005  
                      _PORTD 0008                        _TRISA 0085                        _TRISD 0088  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 000F                 __end_of_main 0175                       ??_main 0078  
                  ??___awmod 0076                       _millis 014D              ___awmod@divisor 0072  
            ___awmod@counter 0076                       saved_w 007E        visualizar_display@now 0028  
    __end_of__initialization 002A                __end_of_DATOS 012F                    ?_INT_TMR0 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 018D               _OPTION_REGbits 0081  
                 __pbssBANK0 002C  __end_of_configurar_hardware 018D                   ??_INT_TMR0 0070  
                 __pmaintext 0162                   __pintentry 0004                      ?_millis 0072  
                 __stringtab 0101                      ___awmod 00A8                      __ptext1 002E  
                    __ptext2 014D                      __ptext3 00A8                      __ptext4 0175  
                    __ptext5 0184                      __ptext6 012F             ___awmod@dividend 0074  
       end_of_initialization 002A                      millis@m 0020   visualizar_display@last_mux 002C  
             __end_of_millis 0162          start_initialization 000F            ??_configurar_tmr0 0072  
 __end_of_visualizar_display 00A8                  __pdataBANK0 0031                     ??_millis 0076  
                __pbssCOMMON 0078                    ___latbits 0002                __pcstackBANK0 0020  
                   ?___awmod 0072                    __pstrings 0101            interrupt_function 0004  
               _milisegundos 0078                     _INT_TMR0 012F                  __stringbase 0106  
            _configurar_tmr0 0175           __end_of__stringtab 0107           _visualizar_display 002E  
                 _INTCONbits 000B          ?_visualizar_display 0070                     intlevel1 0000  
        _configurar_hardware 0184      __end_of_configurar_tmr0 0184                    stringcode 0101  
       ??_visualizar_display 0024         ?_configurar_hardware 0070               _display_buffer 0031  
                   stringdir 0101                     stringtab 0101                _display_state 0030  
